/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AboutMe as PrismaAboutMe } from "@prisma/client";

export class AboutMeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AboutMeCountArgs, "select">): Promise<number> {
    return this.prisma.aboutMe.count(args);
  }

  async aboutMes(args: Prisma.AboutMeFindManyArgs): Promise<PrismaAboutMe[]> {
    return this.prisma.aboutMe.findMany(args);
  }
  async aboutMe(
    args: Prisma.AboutMeFindUniqueArgs
  ): Promise<PrismaAboutMe | null> {
    return this.prisma.aboutMe.findUnique(args);
  }
  async createAboutMe(args: Prisma.AboutMeCreateArgs): Promise<PrismaAboutMe> {
    return this.prisma.aboutMe.create(args);
  }
  async updateAboutMe(args: Prisma.AboutMeUpdateArgs): Promise<PrismaAboutMe> {
    return this.prisma.aboutMe.update(args);
  }
  async deleteAboutMe(args: Prisma.AboutMeDeleteArgs): Promise<PrismaAboutMe> {
    return this.prisma.aboutMe.delete(args);
  }
}
